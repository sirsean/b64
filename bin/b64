#!/usr/bin/env ruby
require 'rubygems'
require 'b64'

arg = B64::Arg.parse(ARGV)

if arg.encode?
  arg.fields.each do |field|
    engine = B64::Engine.new(:plain => field)
    puts "#{field} => #{engine.encode}"
  end
elsif arg.decode?
  arg.fields.each do |field|
    engine = B64::Engine.new(:base64 => field)
    puts "#{field} => #{engine.decode}"
  end
else
  puts "Usage:"
  puts "\tb64 ?\t\t\tThis usage message."
  puts "\tb64 enc <input>\t\tBase64-encode the input string(s)."
  puts "\tb64 dec <input>\t\tBase64-decode the input string(s)."
  puts
  puts "Examples:"
  puts "\tb64 enc input"
  puts "\t\tinput => aW5wdXQ="
  puts "\tb64 encode input string"
  puts "\t\tinput => aW5wdXQ="
  puts "\t\tstring => c3RyaW5n"
  puts "\tb64 dec input"
  puts "\t\taW5wdXQ= => input"
  puts "\tb64 decode input string"
  puts "\t\taW5wdXQ= => input"
  puts "\t\tc3RyaW5n => string"
  
end
